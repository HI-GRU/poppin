services:
  mysql:
    image: mysql
    restart: always
    #TODO: Replace env_file with detailed environment variables using the environment section
    env_file:
      - .env
    ports:
      - "3306:3306"
    volumes:
      - ./db/mysql/data:/var/lib/mysql
      - ./db/mysql/initdb:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
  nginx:
    image: nginx:poppin
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    restart: always
    #TODO: Replace env_file with detailed environment variables using the environment section
    env_file:
      - .env
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/templates:/etc/nginx/templates
      - app_home:/usr/share/nginx/html
    depends_on:
      frontend-builder:
        condition: service_completed_successfully
  redis:
    image: redis
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
  mongodb:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - ./db/mongodb/data:/data/db
    healthcheck:
      test: ["CMD", "mongo", "admin", "--eval", "db.runCommand({ ping: 1 })"]
  backend-builder:
    image: eclipse-temurin:17
    #TODO: Replace env_file with detailed environment variables using the environment section
    env_file:
      - .env
    volumes:
      - ./backend:/opt/app
      - gradle_home:/opt/app/build
    working_dir: /opt/app
    command: "./gradlew build -x test"
  backend:
    image: eclipse-temurin:17
    #TODO: Replace env_file with detailed environment variables using the environment section
    env_file:
      - .env
    volumes:
      - gradle_home:/opt/app/build
    command: "java -jar /opt/app/build/libs/poppin-0.0.1-SNAPSHOT.jar"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      backend-builder:
        condition: service_completed_successfully
    develop:
      watch:
        - path: gradle_home
          action: sync+restart
          target: /opt/app/build
  frontend-builder:
    image: node
    volumes:
      - ./frontend:/opt/app
      - app_home:/opt/app/dist
    working_dir: /opt/app
    command: sh -c "npm i && npm run build"
volumes:
  gradle_home:
  app_home: